/PROG  GRIP_CHK
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "CHECK GRIPPERS";
PROG_SIZE	= 5155;
CREATE		= DATE 14-03-31  TIME 23:32:30;
MODIFIED	= DATE 17-04-05  TIME 14:15:10;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 226;
MEMORY_SIZE	= 5799;
PROTECT		= READ;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= *,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;

  AUTOZONE_INTERFERENCE_AVOID;
    AUTOZONE_ENABLED         : FALSE;
    AUTOZONE_SCHEDULE_NUMBER : 1;
/MN
   1:  LBL[1:START] ;
   2:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[2] ;
   3:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[3] ;
   4:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[4] ;
   5:  JMP LBL[9990] ;
   6:   ;
   7:  LBL[2:CHECK 1 GRIPPER] ;
   8:  IF RO[R[100]]=ON,JMP LBL[110] ;
   9:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[10] ;
  10:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
  11:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
  12:   ;
  13:  LBL[3:CHECK 2 GRIPPERS] ;
  14:  IF RO[R[100]]=ON AND RO[R[101]]=ON,JMP LBL[140] ;
  15:  IF RO[R[100]]=ON AND RO[R[101]]=OFF,JMP LBL[110] ;
  16:  IF RO[R[100]]=OFF AND RO[R[101]]=ON,JMP LBL[120] ;
  17:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[10] ;
  18:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
  19:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
  20:   ;
  21:  LBL[4:CHECK 3 GRIPPERS] ;
  22:  IF RO[R[100]]=ON AND RO[R[101]]=ON AND RO[R[102]]=ON,JMP LBL[100] ;
  23:  IF RO[R[100]]=ON AND RO[R[101]]=OFF AND RO[R[102]]=OFF,JMP LBL[110] ;
  24:  IF RO[R[100]]=OFF AND RO[R[101]]=ON AND RO[R[102]]=OFF,JMP LBL[120] ;
  25:  IF RO[R[100]]=OFF AND RO[R[101]]=OFF AND RO[R[102]]=ON,JMP LBL[130] ;
  26:  IF RO[R[100]]=ON AND RO[R[101]]=ON AND RO[R[102]]=OFF,JMP LBL[140] ;
  27:  IF RO[R[100]]=ON AND RO[R[101]]=OFF AND RO[R[102]]=ON,JMP LBL[150] ;
  28:  IF RO[R[100]]=OFF AND RO[R[101]]=ON AND RO[R[102]]=ON,JMP LBL[160] ;
  29:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[10] ;
  30:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
  31:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
  32:   ;
  33:  LBL[10:CHECK 1 CLOSED] ;
  34:  IF RI[R[106]]=ON,JMP LBL[910] ;
  35:  IF RO[R[100]]=OFF AND RI[R[103]]=ON,JMP LBL[900] ;
  36:  JMP LBL[9999] ;
  37:   ;
  38:  LBL[20:CHECK 2 CLOSED] ;
  39:  IF RI[R[106]]=ON AND RI[R[107]]=ON,JMP LBL[909] ;
  40:  IF RI[R[106]]=ON AND RI[R[107]]=OFF,JMP LBL[910] ;
  41:  IF RI[R[106]]=OFF AND RI[R[107]]=ON,JMP LBL[911] ;
  42:  IF RO[R[100]]=OFF AND RI[R[103]]=ON,JMP LBL[900] ;
  43:  IF RO[R[101]]=OFF AND RI[R[104]]=ON,JMP LBL[901] ;
  44:  JMP LBL[9999] ;
  45:   ;
  46:  LBL[30:CHECK 3 CLOSED] ;
  47:  IF RI[R[106]]=ON AND RI[R[107]]=ON AND RI[R[108]]=ON,JMP LBL[906] ;
  48:  IF RI[R[106]]=ON AND RI[R[107]]=OFF AND RI[R[108]]=ON,JMP LBL[907] ;
  49:  IF RI[R[106]]=OFF AND RI[R[107]]=ON AND RI[R[108]]=ON,JMP LBL[908] ;
  50:  IF RO[R[100]]=OFF AND RI[R[103]]=ON,JMP LBL[900] ;
  51:  IF RO[R[101]]=OFF AND RI[R[104]]=ON,JMP LBL[901] ;
  52:  IF RO[R[102]]=OFF AND RI[R[105]]=ON,JMP LBL[902] ;
  53:  IF RI[R[106]]=ON,JMP LBL[910] ;
  54:  IF RI[R[107]]=ON,JMP LBL[911] ;
  55:  IF RI[R[108]]=ON,JMP LBL[912] ;
  56:  JMP LBL[9999] ;
  57:   ;
  58:  LBL[100:CKECK 1,2,AND 3] ;
  59:  IF RI[R[103]]=OFF,JMP LBL[900] ;
  60:  IF RI[R[104]]=OFF,JMP LBL[901] ;
  61:  IF RI[R[105]]=OFF,JMP LBL[902] ;
  62:  RO[R[100]]=OFF ;
  63:  RO[R[101]]=OFF ;
  64:  RO[R[102]]=OFF ;
  65:  WAIT   1.00(sec) ;
  66:  IF RI[R[106]]=OFF,JMP LBL[903] ;
  67:  IF RI[R[107]]=OFF,JMP LBL[904] ;
  68:  IF RI[R[108]]=OFF,JMP LBL[905] ;
  69:  RO[R[100]]=ON ;
  70:  RO[R[101]]=ON ;
  71:  RO[R[102]]=ON ;
  72:  WAIT   1.00(sec) ;
  73:  WAIT RI[R[103]]=ON TIMEOUT,LBL[900] ;
  74:  WAIT RI[R[104]]=ON TIMEOUT,LBL[901] ;
  75:  WAIT RI[R[105]]=ON TIMEOUT,LBL[902] ;
  76:  JMP LBL[30] ;
  77:   ;
  78:  LBL[110:CKECK GRIPPER 1] ;
  79:  IF RI[R[103]]=OFF,JMP LBL[900] ;
  80:  RO[R[100]]=OFF ;
  81:  WAIT   1.00(sec) ;
  82:  IF RI[R[106]]=OFF,JMP LBL[903] ;
  83:  RO[R[100]]=ON ;
  84:  WAIT RI[R[103]]=ON TIMEOUT,LBL[900] ;
  85:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[10] ;
  86:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
  87:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
  88:   ;
  89:  LBL[120:CKECK GRIPPER 2] ;
  90:  IF RI[R[104]]=OFF,JMP LBL[901] ;
  91:  RO[R[101]]=OFF ;
  92:  WAIT   1.00(sec) ;
  93:  IF RI[R[107]]=OFF,JMP LBL[904] ;
  94:  RO[R[101]]=ON ;
  95:  WAIT RI[R[104]]=ON TIMEOUT,LBL[901] ;
  96:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
  97:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
  98:   ;
  99:  LBL[130:CKECK GRIPPER 3] ;
 100:  IF RI[R[105]]=OFF,JMP LBL[902] ;
 101:  RO[R[102]]=OFF ;
 102:  WAIT   1.00(sec) ;
 103:  IF RI[R[108]]=OFF,JMP LBL[903] ;
 104:  RO[R[102]]=ON ;
 105:  WAIT RI[R[105]]=ON TIMEOUT,LBL[902] ;
 106:  JMP LBL[30] ;
 107:   ;
 108:  LBL[140:CKECK GRIP 1,2] ;
 109:  IF RI[R[103]]=OFF,JMP LBL[900] ;
 110:  IF RI[R[104]]=OFF,JMP LBL[901] ;
 111:  RO[R[100]]=OFF ;
 112:  RO[R[101]]=OFF ;
 113:  WAIT   1.00(sec) ;
 114:  IF RI[R[106]]=OFF,JMP LBL[903] ;
 115:  IF RI[R[107]]=OFF,JMP LBL[904] ;
 116:  RO[R[100]]=ON ;
 117:  RO[R[101]]=ON ;
 118:  WAIT RI[R[103]]=ON TIMEOUT,LBL[900] ;
 119:  WAIT RI[R[104]]=ON TIMEOUT,LBL[901] ;
 120:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
 121:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
 122:   ;
 123:  LBL[150:CKECK GRIP 1,3] ;
 124:  IF RI[R[103]]=OFF,JMP LBL[900] ;
 125:  IF RI[R[105]]=OFF,JMP LBL[902] ;
 126:  RO[R[100]]=OFF ;
 127:  RO[R[102]]=OFF ;
 128:  WAIT   1.00(sec) ;
 129:  IF RI[R[106]]=OFF,JMP LBL[903] ;
 130:  IF RI[R[108]]=OFF,JMP LBL[904] ;
 131:  RO[R[100]]=ON ;
 132:  RO[R[102]]=ON ;
 133:  WAIT RI[R[103]]=ON TIMEOUT,LBL[900] ;
 134:  WAIT RI[R[105]]=ON TIMEOUT,LBL[902] ;
 135:  JMP LBL[30] ;
 136:   ;
 137:  LBL[160:CKECK GRIP 2,3] ;
 138:  IF RI[R[104]]=OFF,JMP LBL[901] ;
 139:  IF RI[R[105]]=OFF,JMP LBL[902] ;
 140:  RO[R[101]]=OFF ;
 141:  RO[R[102]]=OFF ;
 142:  WAIT   1.00(sec) ;
 143:  IF RI[R[107]]=OFF,JMP LBL[904] ;
 144:  IF RI[R[108]]=OFF,JMP LBL[905] ;
 145:  RO[R[101]]=ON ;
 146:  RO[R[102]]=ON ;
 147:  WAIT RI[R[104]]=ON TIMEOUT,LBL[901] ;
 148:  WAIT RI[R[105]]=ON TIMEOUT,LBL[902] ;
 149:  JMP LBL[30] ;
 150:   ;
 151:  LBL[900:GRIPPER FAULT] ;
 152:  CALL GRIP_MSG(11) ;
 153:  UALM[R[111]] ;
 154:  JMP LBL[1] ;
 155:   ;
 156:  LBL[901:GRIPPER FAULT] ;
 157:  CALL GRIP_MSG(12) ;
 158:  UALM[R[111]] ;
 159:  JMP LBL[1] ;
 160:   ;
 161:  LBL[902:GRIPPER FAULT] ;
 162:  CALL GRIP_MSG(13) ;
 163:  UALM[R[111]] ;
 164:  JMP LBL[1] ;
 165:   ;
 166:  LBL[903:GRIPPER FAULT] ;
 167:  CALL GRIP_MSG(14) ;
 168:  UALM[R[111]] ;
 169:  JMP LBL[1] ;
 170:   ;
 171:  LBL[904:GRIPPER FAULT] ;
 172:  CALL GRIP_MSG(15) ;
 173:  UALM[R[111]] ;
 174:  JMP LBL[1] ;
 175:   ;
 176:  LBL[905:GRIPPER FAULT] ;
 177:  CALL GRIP_MSG(16) ;
 178:  CALL USERCLR    ;
 179:  UALM[R[111]] ;
 180:  JMP LBL[1] ;
 181:   ;
 182:  LBL[906:GRIPPER FAULT] ;
 183:  CALL GRIP_MSG(17) ;
 184:  UALM[R[111]] ;
 185:  JMP LBL[30] ;
 186:   ;
 187:  LBL[907:GRIP FAULT 1,3] ;
 188:  CALL GRIP_MSG(18) ;
 189:  UALM[R[111]] ;
 190:  JMP LBL[30] ;
 191:   ;
 192:  LBL[908:GRIP FAULT 2,3] ;
 193:  CALL GRIP_MSG(19) ;
 194:  UALM[R[111]] ;
 195:  JMP LBL[30] ;
 196:   ;
 197:  LBL[909:GRIP FAULT 1,2] ;
 198:  CALL GRIP_MSG(20) ;
 199:  UALM[R[111]] ;
 200:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
 201:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
 202:   ;
 203:  LBL[910:GRIPPER FAULT 1] ;
 204:  CALL GRIP_MSG(3) ;
 205:  UALM[R[111]] ;
 206:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]=0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[10] ;
 207:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
 208:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
 209:   ;
 210:  LBL[911:GRIPPER FAULT 2] ;
 211:  CALL GRIP_MSG(6) ;
 212:  UALM[R[111]] ;
 213:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]=0,JMP LBL[20] ;
 214:  IF R[100:T1 OPEN OUTPUT]<>0 AND R[101:T2 OPEN OUTPUT]<>0 AND R[102:T3 OPEN OUTPUT]<>0,JMP LBL[30] ;
 215:   ;
 216:  LBL[912:GRIPPER FAULT 3] ;
 217:  CALL GRIP_MSG(21) ;
 218:  UALM[R[111]] ;
 219:  JMP LBL[30] ;
 220:   ;
 221:  LBL[9990:GRIP CHECK FAULT] ;
 222:  CALL GRIP_MSG(22) ;
 223:  UALM[R[111]] ;
 224:  JMP LBL[1] ;
 225:   ;
 226:  LBL[9999:END] ;
/POS
/END
