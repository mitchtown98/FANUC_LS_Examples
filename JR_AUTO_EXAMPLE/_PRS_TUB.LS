/PROG  _PRS_TUB
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 4587;
CREATE		= DATE 21-04-13  TIME 18:16:32;
MODIFIED	= DATE 21-04-13  TIME 18:16:32;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 202;
MEMORY_SIZE	= 5107;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;
/MN
   1:  !************************* ;
   2:  !262630 - Present Tub ;
   3:  !JR Automation ;
   4:  !Created: March 2021 ;
   5:  ! Present Tub for Scanning ;
   6:  !************************* ;
   7:   ;
   8:  !Program Resume Check ;
   9:  //IF R[1:State]>=200 AND R[1:State]<299,JMP LBL[R[1]] ;
  10:   ;
  11:  CALL PAYLOAD    ;
  12:   ;
  13:  !Write the current data to Regs ;
  14:  R[9:St. CMD]=GI[1:Command]    ;
  15:  R[10:St. Index]=GI[3:Index]    ;
  16:  R[11:St. Aux Index]=GI[4:Aux Index]    ;
  17:   ;
  18:  !Parameter Check ;
  19:  !Check if R[9] range is valid ;
  20:  //IF (R[9:St. CMD]<>1),JMP LBL[9000] ;
  21:  !Check if R[10] range is valid ;
  22:  //IF (R[10:St. Index]<1 OR R[10:St. Index]>5),JMP LBL[9000] ;
  23:  !Check if R[11] range is valid ;
  24:  //IF (R[11:St. Aux Index]<1 OR R[11:St. Aux Index]>5),JMP LBL[9000] ;
  25:   ;
  26:  !----------------------------- ;
  27:  !--Set UTOOL and UFRAME ;
  28:  !--------------------------- ;
  29:  !*********************** ;
  30:  !Set UtoolNum ;
  31:  R[33:UToolNum]=2    ;
  32:  UTOOL_NUM=R[33:UToolNum] ;
  33:   ;
  34:  LBL[200:Data Select] ;
  35:  R[1:State]=200    ;
  36:   ;
  37:  !Clear work data ;
  38:  PR[6:Work Pick]=LPOS-LPOS    ;
  39:  !Index= 1(Pallet Conv) ;
  40:  !Index= 2(Reject Conv) ;
  41:  !Index= 3(ReEntry Conv) ;
  42:  !Index= 4(DeLidder) ;
  43:  !Index= 5(Tub Conv) ;
  44:  !Index= 6(Lidder) ;
  45:   ;
  46:  !Load Pick Data ;
  47:  !Present Tub only for Barcode Sca ;
  48:  R[32:UFrameNum]=3    ;
  49:  PR[6:Work Pick]=PR[70:Scan Position]    ;
  50:  R[30:Perch Reg]=50    ;
  51:  JMP LBL[210] ;
  52:   ;
  53:   ;
  54:  !If here, you took a wrong turn ;
  55:  R[99:Fault Code]=90    ;
  56:  !Invalid Index Location, Fault ou ;
  57:  JMP LBL[9000] ;
  58:   ;
  59:  LBL[210:Perch Start] ;
  60:  !*********************** ;
  61:  --eg:Set Userframe based on R[11] in Load Data Section ;
  62:  !Pallet Conv UF[2] ;
  63:  !Barcode Scanner UF[3] ;
  64:  !DeLidder Stn UF[4] ;
  65:  !Lid Conv UF[5] ;
  66:  !Reject Conv UF[6] ;
  67:  !ReEntry Conv UF[7] ;
  68:   ;
  69:  !Check if Index value is valid. ;
  70:  IF ((R[32:UFrameNum]<1) OR (R[32:UFrameNum]>6)),JMP LBL[9000] ;
  71:  !Load Selected Uframe before resu ;
  72:  UFRAME_NUM=R[32:UFrameNum] ;
  73:  !*********************** ;
  74:  !----------------------------- ;
  75:  --eg:You can skip the Perchpaths program if you only have 2 perches and
    :  either of them can safely go to the other ;
  76:  R[1:State]=210    ;
  77:  R[99:Fault Code]=1    ;
  78:  IF (R[30:Perch Reg]=0),JMP LBL[9000] ;
  79:  !PR[49]/DO[70]: Pallet Perch ;
  80:  !PR[50]/DO[71]: Scan Perch ;
  81:  !PR[51]/DO[72]: DeLidding Perch ;
  82:  !PR[52]/DO[73]: Lid Conv Perch ;
  83:  !PR[53]/DO[74]: Reject Perch ;
  84:  !PR[54]/DO[75]: ReEntry Perch ;
  85:   ;
  86:  !Check if at any perch position ;
  87:  IF (DO[69:ValidPerch]=ON OR DO[68:FinalDestination]=ON) THEN ;
  88:  UFRAME_NUM=0 ;
  89:  R[99:Fault Code]=2    ;
  90:  CALL _PERCH_PATHS    ;
  91:  JMP LBL[220] ;
  92:  ENDIF ;
  93:   ;
  94:  !Robot is not at a perch position ;
  95:  !Go Park Yourself ;
  96:  CALL _SAFE_PARK    ;
  97:  UFRAME_NUM=0 ;
  98:  R[99:Fault Code]=2    ;
  99:  CALL _PERCH_PATHS    ;
 100:  JMP LBL[220] ;
 101:   ;
 102:  LBL[220:Tool Check] ;
 103:  R[1:State]=220    ;
 104:  R[100:FinalDestination]=0    ;
 105:  !Alarm if the Grippers are extend ;
 106:  IF (DI[162:iTubGripLExtd]=ON OR DI[164:iTubGripRExtd]=ON),JMP LBL[9000] ;
 107:   ;
 108:  LBL[225:Approach Only] ;
 109:  R[1:State]=225    ;
 110:  UFRAME_NUM=R[32:UFrameNum] ;
 111:  UTOOL_NUM=R[33:UToolNum] ;
 112:  !Set Collision Guard ;
 113:  COL GUARD ADJUST 100 ;
 114:  !Approach 1 ;
 115:L PR[6:Work Pick] 4000mm/sec CNT75 Offset,PR[133:Prs Appr1]    ;
 116:  DO[41:Ok To Stop]=ON ;
 117:  R[99:Fault Code]=1    ;
 118:  WAIT DI[45:Approach Only]=OFF TIMEOUT,LBL[9000] ;
 119:  DO[41:Ok To Stop]=OFF ;
 120:   ;
 121:  LBL[230:Move to Pick] ;
 122:  R[1:State]=230    ;
 123:  !Approach 2 ;
 124:L PR[6:Work Pick] 2500mm/sec CNT25 Offset,PR[134:Prs Appr2]    ;
 125:  !Approach 3 ;
 126:  //L PR[6:Work Pick] 1200mm/sec CNT25 Offset,PR[135:Prs Appr3]    ;
 127:   ;
 128:L PR[6:Work Pick] 500mm/sec FINE    ;
 129:   ;
 130:  LBL[240:Scan Ready] ;
 131:  R[1:State]=240    ;
 132:  DO[145:ScanReady]=ON ;
 133:  WAIT    .20(sec) ;
 134:   ;
 135:  LBL[250:Scan ACK] ;
 136:  R[1:State]=250    ;
 137:  $WAITTMOUT=8000 ;
 138:  R[99:Fault Code]=1    ;
 139:  WAIT DI[145:ScanAck]=ON TIMEOUT,LBL[9000] ;
 140:  //DO[145:ScanReady]=OFF ;
 141:  //R[99:Fault Code]=2    ;
 142:  //WAIT DI[145:ScanAck]=OFF TIMEOUT,LBL[9000] ;
 143:   ;
 144:  LBL[270:Pick Retreat 1] ;
 145:  R[1:State]=270    ;
 146:  !Set Collision Guard ;
 147:  COL GUARD ADJUST 100 ;
 148:   ;
 149:  !Pick Retreat 1 ;
 150:L PR[6:Work Pick] 1200mm/sec CNT25 Offset,PR[136:Prs Retr1]    ;
 151:   ;
 152:  !Pick Retreat 2 ;
 153:L PR[6:Work Pick] 2000mm/sec CNT50 Offset,PR[137:Prs Retr2]    ;
 154:   ;
 155:  LBL[280: Pick Retreat 2] ;
 156:  R[1:State]=280    ;
 157:   ;
 158:  !Pick Retreat 3 ;
 159:L PR[6:Work Pick] 4000mm/sec CNT100 Offset,PR[138:Prs Retr3]    ;
 160:   ;
 161:  LBL[290: Return to Perch] ;
 162:  R[1:State]=290    ;
 163:  UFRAME_NUM=0 ;
 164:J PR[R[30]] 100% CNT75    ;
 165:  R[100:FinalDestination]=R[30:Perch Reg]    ;
 166:   ;
 167:  IF DI[33:Cycle Auto]=OFF,JMP LBL[299] ;
 168:  !Handshake with PLC ;
 169:  GO[1:Response]=R[9:St. CMD] ;
 170:  DO[41:Ok To Stop]=ON ;
 171:  R[99:Fault Code]=1    ;
 172:  WAIT GI[1:Command]=0 TIMEOUT,LBL[9000] ;
 173:  DO[41:Ok To Stop]=OFF ;
 174:  LBL[299: End] ;
 175:  R[1:State]=299    ;
 176:  GO[1:Response]=0 ;
 177:  DO[145:ScanReady]=OFF ;
 178:  R[99:Fault Code]=2    ;
 179:  WAIT DI[145:ScanAck]=OFF TIMEOUT,LBL[9000] ;
 180:   ;
 181:  R[1:State]=0    ;
 182:  JMP LBL[9999] ;
 183:   ;
 184:  LBL[9000:ALARM] ;
 185:  !Generate Warning or Fault ;
 186:  IF (R[99:Fault Code]<1) THEN ;
 187:  GO[6:Faulted State]=R[1:State] ;
 188:  GO[2:Fault Number]=97 ;
 189:  ELSE ;
 190:  GO[6:Faulted State]=R[1:State] ;
 191:  GO[2:Fault Number]=R[99:Fault Code] ;
 192:  ENDIF ;
 193:  PAUSE ;
 194:  ABORT ;
 195:  !***************************** ;
 196:  LBL[9998:Abort] ;
 197:  WAIT   1.00(sec) ;
 198:  ABORT ;
 199:  !***************************** ;
 200:  LBL[9999:End] ;
 201:  !FINITO ;
 202:  !************************* ;
/POS
/END
