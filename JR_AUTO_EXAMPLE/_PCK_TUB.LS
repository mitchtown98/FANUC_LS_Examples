/PROG  _PCK_TUB
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 5783;
CREATE		= DATE 21-04-13  TIME 18:16:30;
MODIFIED	= DATE 21-04-13  TIME 18:16:30;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 266;
MEMORY_SIZE	= 6403;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;
/MN
   1:  !************************* ;
   2:  !262630 - Pick Tub ;
   3:  !JR Automation ;
   4:  !Created: March 2021 ;
   5:  ! Pick Tub ;
   6:  !************************* ;
   7:   ;
   8:  !Program Resume Check ;
   9:  //IF R[1:State]>=100 AND R[1:State]<199,JMP LBL[R[1]] ;
  10:   ;
  11:  CALL PAYLOAD    ;
  12:   ;
  13:  !Write the current data to Regs ;
  14:  R[9:St. CMD]=GI[1:Command]    ;
  15:  R[10:St. Index]=GI[3:Index]    ;
  16:  R[11:St. Aux Index]=GI[4:Aux Index]    ;
  17:   ;
  18:  !Parameter Check ;
  19:  !Check if R[9] range is valid ;
  20:  //IF (R[9:St. CMD]<>1),JMP LBL[9000] ;
  21:  !Check if R[10] range is valid ;
  22:  //IF (R[10:St. Index]<1 OR R[10:St. Index]>5),JMP LBL[9000] ;
  23:  !Check if R[11] range is valid ;
  24:  //IF (R[11:St. Aux Index]<1 OR R[11:St. Aux Index]>5),JMP LBL[9000] ;
  25:   ;
  26:  !----------------------------- ;
  27:  !--Set UTOOL Register ;
  28:  !--------------------------- ;
  29:  !*********************** ;
  30:  !Set UtoolNum ;
  31:  R[33:UToolNum]=2    ;
  32:  UTOOL_NUM=R[33:UToolNum] ;
  33:   ;
  34:  LBL[100:Data Select] ;
  35:  R[1:State]=100    ;
  36:   ;
  37:  !Clear work data ;
  38:  PR[6:Work Pick]=LPOS-LPOS    ;
  39:  PR[38]=LPOS-LPOS    ;
  40:  !Index= 1(Pallet Conv) ;
  41:  !Index= 2(Reject Conv) ;
  42:  !Index= 3(ReEntry Conv) ;
  43:  !Index= 4(DeLidder) ;
  44:  !Index= 5(Tub Conv) ;
  45:  !Index= 6(Lidder) ;
  46:   ;
  47:  !Load Pick Data ;
  48:  SELECT R[10:St. Index]=1,JMP LBL[101] ;
  49:         =3,JMP LBL[103] ;
  50:         ELSE,JMP LBL[9000] ;
  51:   ;
  52:  LBL[101:Pallet Data] ;
  53:  --eg:Pallet Pick now done in DePalletize program ;
  54:  JMP LBL[9000] ;
  55:   ;
  56:  LBL[103:ReEntry Conv] ;
  57:  !Pick At ReEntry Conv ;
  58:  PR[6:Work Pick]=PR[75:ReEntry Pick]    ;
  59:  R[30:Perch Reg]=54    ;
  60:  R[32:UFrameNum]=7    ;
  61:  JMP LBL[110] ;
  62:   ;
  63:   ;
  64:  !If here, you took a wrong turn ;
  65:  R[99:Fault Code]=90    ;
  66:  !Invalid Index Location, Fault ou ;
  67:  JMP LBL[9000] ;
  68:   ;
  69:  LBL[110:Perch Start] ;
  70:  !*********************** ;
  71:  --eg:Set Userframe based on R[11] in Load Data Section ;
  72:  !Pallet Conv UF[2] ;
  73:  !Scanner UF[3] ;
  74:  !DeLidder Stn UF[4] ;
  75:  !Lid Conv UF[5] ;
  76:  !Reject Conv UF[6] ;
  77:  !ReEntry Conv UF[7] ;
  78:   ;
  79:  !Check if Index value is valid. ;
  80:  IF ((R[32:UFrameNum]<1) OR (R[32:UFrameNum]>7)),JMP LBL[9000] ;
  81:  !Load Selected Uframe before resu ;
  82:  UFRAME_NUM=R[32:UFrameNum] ;
  83:  !*********************** ;
  84:  !----------------------------- ;
  85:  --eg:You can skip the Perchpaths program if you only have 2 perches and
    :  either of them can safely go to the other ;
  86:  R[1:State]=110    ;
  87:  R[99:Fault Code]=1    ;
  88:  IF (R[30:Perch Reg]=0),JMP LBL[9000] ;
  89:  !PR[49]/DO[70]: Pallet Perch ;
  90:  !PR[50]/DO[71]: Scan Perch ;
  91:  !PR[51]/DO[72]: DeLidding Perch ;
  92:  !PR[52]/DO[73]: Lid Conv Perch ;
  93:  !PR[53]/DO[74]: Reject Perch ;
  94:  !PR[54]/DO[75]: ReEntry Perch ;
  95:   ;
  96:  !Check if at any perch position ;
  97:  IF (DO[69:ValidPerch]=ON OR DO[68:FinalDestination]=ON) THEN ;
  98:  UFRAME_NUM=0 ;
  99:  R[99:Fault Code]=2    ;
 100:  CALL _PERCH_PATHS    ;
 101:  JMP LBL[120] ;
 102:  ENDIF ;
 103:   ;
 104:  !Robot is not at a perch position ;
 105:  !Go Park Yourself ;
 106:  CALL _SAFE_PARK    ;
 107:  UFRAME_NUM=0 ;
 108:  R[99:Fault Code]=2    ;
 109:  CALL _PERCH_PATHS    ;
 110:  JMP LBL[120] ;
 111:   ;
 112:  LBL[120:Tool Check] ;
 113:  R[1:State]=120    ;
 114:  R[100:FinalDestination]=0    ;
 115:  !Pick Ready Left Gripper Check ;
 116:  R[99:Fault Code]=1    ;
 117:  IF (DI[161:iTubGripLRetd]=OFF OR DI[162:iTubGripLExtd]=ON OR DI[165:iTubGrippedLeft]=ON),JMP LBL[9000] ;
 118:  !Pick Ready Right Gripper Check ;
 119:  R[99:Fault Code]=2    ;
 120:  IF (DI[163:iTubGripRRetd]=OFF OR DI[164:iTubGripRExtd]=ON OR DI[166:iTubGrippedRight]=ON),JMP LBL[9000] ;
 121:  !Pick Ready Vertical Lift Check ;
 122:  R[99:Fault Code]=3    ;
 123:  IF (DI[167:iTubGripLiftRetd]=OFF OR DI[168:iTubGripLiftExtd]=ON),JMP LBL[9000] ;
 124:  !Pick Ready Vacuum Check ;
 125:  R[99:Fault Code]=4    ;
 126:  IF DI[169:iVacGripVacOK]=ON,JMP LBL[9000] ;
 127:   ;
 128:  LBL[125:Approach Only] ;
 129:  R[1:State]=125    ;
 130:  UFRAME_NUM=R[32:UFrameNum] ;
 131:  UTOOL_NUM=R[33:UToolNum] ;
 132:  !Set Collision Guard ;
 133:  COL GUARD ADJUST 100 ;
 134:  !Approach 1 ;
 135:L PR[6:Work Pick] 4000mm/sec CNT75 Offset,PR[145:Pick Appr 1]    ;
 136:  DO[41:Ok To Stop]=ON ;
 137:  R[99:Fault Code]=1    ;
 138:  WAIT DI[45:Approach Only]=OFF TIMEOUT,LBL[9000] ;
 139:  DO[41:Ok To Stop]=OFF ;
 140:   ;
 141:  LBL[130:Move to Pick] ;
 142:  R[1:State]=130    ;
 143:  !Approach 2 ;
 144:L PR[6:Work Pick] 2500mm/sec CNT25 Offset,PR[146:Pick Appr 2]    ;
 145:  !Approach 3 ;
 146:L PR[6:Work Pick] 1200mm/sec CNT25 Offset,PR[147:Pick Appr 3]    ;
 147:  DO[165:oVacOn]=ON ;
 148:   ;
 149:L PR[6:Work Pick] 500mm/sec FINE    ;
 150:  WAIT DI[169:iVacGripVacOK]=ON TIMEOUT,LBL[9000] ;
 151:   ;
 152:  IF (DI[38:Single Step]=OFF),JMP LBL[140] ;
 153:  !Single Step Code ;
 154:  DO[41:Ok To Stop]=ON ;
 155:  WAIT DI[39:Single Step ADV]=ON    ;
 156:  DO[43:Single Step Adv Ack]=ON ;
 157:  WAIT DI[39:Single Step ADV]=OFF    ;
 158:  DO[43:Single Step Adv Ack]=OFF ;
 159:  DO[41:Ok To Stop]=OFF ;
 160:   ;
 161:  LBL[140:Tool Config] ;
 162:  R[1:State]=140    ;
 163:  !Open Grippers ;
 164:  DO[161:oGripExt]=ON ;
 165:  WAIT DI[162:iTubGripLExtd]=ON TIMEOUT,LBL[9000] ;
 166:  WAIT DI[164:iTubGripRExtd]=ON TIMEOUT,LBL[9000] ;
 167:   ;
 168:  IF (DI[38:Single Step]=OFF),JMP LBL[141] ;
 169:  !Single Step Code ;
 170:  DO[41:Ok To Stop]=ON ;
 171:  WAIT DI[39:Single Step ADV]=ON    ;
 172:  DO[43:Single Step Adv Ack]=ON ;
 173:  WAIT DI[39:Single Step ADV]=OFF    ;
 174:  DO[43:Single Step Adv Ack]=OFF ;
 175:  DO[41:Ok To Stop]=OFF ;
 176:   ;
 177:  LBL[141] ;
 178:  R[1:State]=141    ;
 179:  !Extend Gripper Lift ;
 180:  DO[163:oGripLiftExt]=ON ;
 181:  WAIT DI[168:iTubGripLiftExtd]=ON TIMEOUT,LBL[9000] ;
 182:   ;
 183:  IF (DI[38:Single Step]=OFF),JMP LBL[142] ;
 184:  !Single Step Code ;
 185:  DO[41:Ok To Stop]=ON ;
 186:  WAIT DI[39:Single Step ADV]=ON    ;
 187:  DO[43:Single Step Adv Ack]=ON ;
 188:  WAIT DI[39:Single Step ADV]=OFF    ;
 189:  DO[43:Single Step Adv Ack]=OFF ;
 190:  DO[41:Ok To Stop]=OFF ;
 191:   ;
 192:  LBL[142] ;
 193:  R[1:State]=142    ;
 194:  !Grip Tub ;
 195:  DO[162:oGripRet]=ON ;
 196:  WAIT    .50(sec) ;
 197:  WAIT DI[161:iTubGripLRetd]=OFF AND DI[162:iTubGripLExtd]=OFF AND DI[163:iTubGripRRetd]=OFF AND DI[164:iTubGripRExtd]=OFF TIMEOUT,LBL[9000] ;
 198:  !Load New Payload ;
 199:  CALL PAYLOAD    ;
 200:   ;
 201:  IF (DI[38:Single Step]=OFF),JMP LBL[170] ;
 202:  !Single Step Code ;
 203:  DO[41:Ok To Stop]=ON ;
 204:  WAIT DI[39:Single Step ADV]=ON    ;
 205:  DO[43:Single Step Adv Ack]=ON ;
 206:  WAIT DI[39:Single Step ADV]=OFF    ;
 207:  DO[43:Single Step Adv Ack]=OFF ;
 208:  DO[41:Ok To Stop]=OFF ;
 209:   ;
 210:  LBL[170:Pick Retreat 1] ;
 211:  R[1:State]=170    ;
 212:  !Set Collision Guard ;
 213:  COL GUARD ADJUST 100 ;
 214:   ;
 215:  !Pick Retreat 1 ;
 216:L PR[6:Work Pick] 1200mm/sec CNT10 Offset,PR[148:Pick Retr 1]    ;
 217:   ;
 218:  !Pick Retreat 2 ;
 219:L PR[6:Work Pick] 2000mm/sec CNT50 Offset,PR[149:Pick Retr 2]    ;
 220:   ;
 221:  LBL[180: Pick Retreat 2] ;
 222:  R[1:State]=180    ;
 223:   ;
 224:  !Pick Retreat 3 ;
 225:L PR[6:Work Pick] 4000mm/sec CNT100 Offset,PR[150:Pick Retr 3]    ;
 226:   ;
 227:  LBL[190: Return to Perch] ;
 228:  R[1:State]=190    ;
 229:  UFRAME_NUM=0 ;
 230:J PR[R[30]] 100% CNT75    ;
 231:  R[100:FinalDestination]=R[30:Perch Reg]    ;
 232:   ;
 233:  !Skip handshake if out of Auto Cy ;
 234:  IF DI[33:Cycle Auto]=OFF,JMP LBL[199] ;
 235:  !Handshake with PLC ;
 236:  GO[1:Response]=R[9:St. CMD] ;
 237:  DO[41:Ok To Stop]=ON ;
 238:  R[99:Fault Code]=1    ;
 239:  WAIT GI[1:Command]=0 TIMEOUT,LBL[9000] ;
 240:  DO[41:Ok To Stop]=OFF ;
 241:  GO[1:Response]=0 ;
 242:  LBL[199: End] ;
 243:  R[1:State]=199    ;
 244:   ;
 245:  R[1:State]=0    ;
 246:  JMP LBL[9999] ;
 247:   ;
 248:  LBL[9000:ALARM] ;
 249:  !Generate Warning or Fault ;
 250:  IF (R[99:Fault Code]<1) THEN ;
 251:  GO[6:Faulted State]=R[1:State] ;
 252:  GO[2:Fault Number]=97 ;
 253:  ELSE ;
 254:  GO[6:Faulted State]=R[1:State] ;
 255:  GO[2:Fault Number]=R[99:Fault Code] ;
 256:  ENDIF ;
 257:  PAUSE ;
 258:  ABORT ;
 259:  !***************************** ;
 260:  LBL[9998:Abort] ;
 261:  WAIT   1.00(sec) ;
 262:  ABORT ;
 263:  !***************************** ;
 264:  LBL[9999:End] ;
 265:  !FINITO ;
 266:  !************************* ;
/POS
/END
