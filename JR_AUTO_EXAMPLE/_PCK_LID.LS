/PROG  _PCK_LID
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "";
PROG_SIZE	= 4871;
CREATE		= DATE 21-04-13  TIME 18:16:30;
MODIFIED	= DATE 21-04-13  TIME 18:16:30;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 211;
MEMORY_SIZE	= 5355;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;
/MN
   1:  !************************* ;
   2:  !262630 - Pick Lid ;
   3:  !JR Automation ;
   4:  !Created: March 2021 ;
   5:  ! Pick Lid ;
   6:  !************************* ;
   7:   ;
   8:  !Program Resume Check ;
   9:  //IF R[1:State]>=400 AND R[1:State]<499,JMP LBL[R[1]] ;
  10:   ;
  11:  CALL PAYLOAD    ;
  12:   ;
  13:  !Write the current data to Regs ;
  14:  R[9:St. CMD]=GI[1:Command]    ;
  15:  R[10:St. Index]=GI[3:Index]    ;
  16:  R[11:St. Aux Index]=GI[4:Aux Index]    ;
  17:   ;
  18:  !Parameter Check ;
  19:  !Check if R[9] range is valid ;
  20:  //IF (R[9:St. CMD]<>1),JMP LBL[9000] ;
  21:  !Check if R[10] range is valid ;
  22:  //IF (R[10:St. Index]<1 OR R[10:St. Index]>5),JMP LBL[9000] ;
  23:  !Check if R[11] range is valid ;
  24:  //IF (R[11:St. Aux Index]<1 OR R[11:St. Aux Index]>5),JMP LBL[9000] ;
  25:   ;
  26:  !----------------------------- ;
  27:  !--Set UTOOL Register ;
  28:  !--------------------------- ;
  29:  !*********************** ;
  30:  !Set UtoolNum ;
  31:  R[33:UToolNum]=2    ;
  32:  UTOOL_NUM=R[33:UToolNum] ;
  33:   ;
  34:  LBL[400:Data Select] ;
  35:  R[1:State]=400    ;
  36:   ;
  37:  !Clear work data ;
  38:  PR[6:Work Pick]=LPOS-LPOS    ;
  39:  !Index= 1(Pallet Conv) ;
  40:  !Index= 2(Reject Conv) ;
  41:  !Index= 3(ReEntry Conv) ;
  42:  !Index= 4(DeLidder) ;
  43:  !Index= 5(Tub Conv) ;
  44:  !Index= 6(Lidder) ;
  45:   ;
  46:  !Load Pick Data ;
  47:  !Pick Lid only for Lid Slide ;
  48:  PR[6:Work Pick]=PR[72:Lid Pk DeLidder]    ;
  49:  R[30:Perch Reg]=51    ;
  50:  R[32:UFrameNum]=4    ;
  51:  JMP LBL[410] ;
  52:   ;
  53:  LBL[410:Perch Start] ;
  54:  !*********************** ;
  55:  --eg:Set Userframe based on R[11] in Load Data Section ;
  56:  !Pallet Conv UF[2] ;
  57:  !Scanner UF[3] ;
  58:  !DeLidder Stn UF[4] ;
  59:  !Lid Conv UF[5] ;
  60:  !Reject Conv UF[6] ;
  61:  !ReEntry Conv UF[7] ;
  62:   ;
  63:  !Check if Index value is valid. ;
  64:  IF ((R[32:UFrameNum]<1) OR (R[32:UFrameNum]>6)),JMP LBL[9000] ;
  65:  !Load Selected Uframe before resu ;
  66:  UFRAME_NUM=R[32:UFrameNum] ;
  67:  !*********************** ;
  68:  !----------------------------- ;
  69:  --eg:You can skip the Perchpaths program if you only have 2 perches and
    :  either of them can safely go to the other ;
  70:  R[1:State]=410    ;
  71:  R[99:Fault Code]=1    ;
  72:  IF (R[30:Perch Reg]=0),JMP LBL[9000] ;
  73:  !PR[49]/DO[70]: Pallet Perch ;
  74:  !PR[50]/DO[71]: Scan Perch ;
  75:  !PR[51]/DO[72]: DeLidding Perch ;
  76:  !PR[52]/DO[73]: Lid Conv Perch ;
  77:  !PR[53]/DO[74]: Reject Perch ;
  78:  !PR[54]/DO[75]: ReEntry Perch ;
  79:   ;
  80:  !Check if at any perch position ;
  81:  IF (DO[69:ValidPerch]=ON OR DO[68:FinalDestination]=ON) THEN ;
  82:  UFRAME_NUM=0 ;
  83:  R[99:Fault Code]=2    ;
  84:  CALL _PERCH_PATHS    ;
  85:  JMP LBL[420] ;
  86:  ENDIF ;
  87:   ;
  88:  !Robot is not at a perch position ;
  89:  !Go Park Yourself ;
  90:  CALL _SAFE_PARK    ;
  91:  UFRAME_NUM=0 ;
  92:  R[99:Fault Code]=2    ;
  93:  CALL _PERCH_PATHS    ;
  94:  JMP LBL[420] ;
  95:   ;
  96:  LBL[420:Tool Check] ;
  97:  R[1:State]=420    ;
  98:  R[100:FinalDestination]=0    ;
  99:  !Pick Ready Left Gripper Check ;
 100:  R[99:Fault Code]=1    ;
 101:  IF (DI[161:iTubGripLRetd]=OFF OR DI[162:iTubGripLExtd]=ON OR DI[165:iTubGrippedLeft]=ON),JMP LBL[9000] ;
 102:  !Pick Ready Right Gripper Check ;
 103:  R[99:Fault Code]=2    ;
 104:  IF (DI[163:iTubGripRRetd]=OFF OR DI[164:iTubGripRExtd]=ON OR DI[166:iTubGrippedRight]=ON),JMP LBL[9000] ;
 105:  !Pick Ready Vertical Lift Check ;
 106:  R[99:Fault Code]=3    ;
 107:  IF (DI[167:iTubGripLiftRetd]=OFF OR DI[168:iTubGripLiftExtd]=ON),JMP LBL[9000] ;
 108:  !Pick Ready Vacuum Check ;
 109:  R[99:Fault Code]=4    ;
 110:  IF DI[169:iVacGripVacOK]=ON,JMP LBL[9000] ;
 111:   ;
 112:  LBL[425:Approach Only] ;
 113:  R[1:State]=425    ;
 114:  UFRAME_NUM=R[32:UFrameNum] ;
 115:  UTOOL_NUM=R[33:UToolNum] ;
 116:  !Set Collision Guard ;
 117:  COL GUARD ADJUST 100 ;
 118:  !Approach 1 ;
 119:L PR[6:Work Pick] 4000mm/sec CNT75 Offset,PR[151:LidPk Appr1] Tool_Offset,PR[153:LidPk Appr3]    ;
 120:  DO[41:Ok To Stop]=ON ;
 121:  R[99:Fault Code]=1    ;
 122:  WAIT DI[45:Approach Only]=OFF TIMEOUT,LBL[9000] ;
 123:  DO[41:Ok To Stop]=OFF ;
 124:   ;
 125:  LBL[430:Move to Pick] ;
 126:  R[1:State]=430    ;
 127:  !Approach 2 ;
 128:L PR[6:Work Pick] 2500mm/sec CNT25 Offset,PR[152:LidPk Appr2] Tool_Offset,PR[153:LidPk Appr3]    ;
 129:  !Approach 3 ;
 130:L PR[6:Work Pick] 1200mm/sec CNT5 Tool_Offset,PR[153:LidPk Appr3]    ;
 131:   ;
 132:  LBL[435:Vacuum On] ;
 133:  R[1:State]=435    ;
 134:  --eg:Turn on Vacuum and ensure Blowoff is off ;
 135:  DO[165:oVacOn]=ON ;
 136:  DO[166:oBlowoffOn]=OFF ;
 137:  SKIP CONDITION DI[169:iVacGripVacOK]=ON    ;
 138:   ;
 139:L PR[6:Work Pick] 100mm/sec FINE Skip,LBL[435]    ;
 140:   ;
 141:  $WAITTMOUT=8000 ;
 142:  !Wait for Vacuum ON Signal ;
 143:  R[99:Fault Code]=1    ;
 144:  WAIT DI[169:iVacGripVacOK]=ON TIMEOUT,LBL[9000] ;
 145:   ;
 146:  IF (DI[38:Single Step]=OFF),JMP LBL[470] ;
 147:  !Single Step Code ;
 148:  DO[41:Ok To Stop]=ON ;
 149:  WAIT DI[39:Single Step ADV]=ON    ;
 150:  DO[43:Single Step Adv Ack]=ON ;
 151:  WAIT DI[39:Single Step ADV]=OFF    ;
 152:  DO[43:Single Step Adv Ack]=OFF ;
 153:  DO[41:Ok To Stop]=OFF ;
 154:   ;
 155:  LBL[470:Pick Retreat 1] ;
 156:  R[1:State]=470    ;
 157:  !Set Collision Guard ;
 158:  COL GUARD ADJUST 100 ;
 159:   ;
 160:  !Pick Retreat 1 ;
 161:L PR[6:Work Pick] 1200mm/sec CNT10 Tool_Offset,PR[154:LidPk Retr1]    ;
 162:   ;
 163:  !Pick Retreat 2 ;
 164:L PR[6:Work Pick] 2000mm/sec CNT50 Offset,PR[155:LidPk Retr2] Tool_Offset,PR[154:LidPk Retr1]    ;
 165:   ;
 166:  LBL[180: Pick Retreat 2] ;
 167:  R[1:State]=180    ;
 168:   ;
 169:  !Pick Retreat 3 ;
 170:L PR[6:Work Pick] 4000mm/sec CNT100 Offset,PR[156:LidPk Retr3] Tool_Offset,PR[154:LidPk Retr1]    ;
 171:   ;
 172:  LBL[490: Return to Perch] ;
 173:  R[1:State]=490    ;
 174:  UFRAME_NUM=0 ;
 175:J PR[R[30]] 100% CNT75    ;
 176:  R[100:FinalDestination]=R[30:Perch Reg]    ;
 177:   ;
 178:  !Skip handshake if out of Auto Cy ;
 179:  IF DI[33:Cycle Auto]=OFF,JMP LBL[499] ;
 180:  !Handshake with PLC ;
 181:  GO[1:Response]=R[9:St. CMD] ;
 182:  DO[41:Ok To Stop]=ON ;
 183:  R[99:Fault Code]=1    ;
 184:  WAIT GI[1:Command]=0 TIMEOUT,LBL[9000] ;
 185:  DO[41:Ok To Stop]=OFF ;
 186:  GO[1:Response]=0 ;
 187:  LBL[499: End] ;
 188:  R[1:State]=499    ;
 189:   ;
 190:  R[1:State]=0    ;
 191:  JMP LBL[9999] ;
 192:   ;
 193:  LBL[9000:ALARM] ;
 194:  !Generate Warning or Fault ;
 195:  IF (R[99:Fault Code]<1) THEN ;
 196:  GO[6:Faulted State]=R[1:State] ;
 197:  GO[2:Fault Number]=97 ;
 198:  ELSE ;
 199:  GO[6:Faulted State]=R[1:State] ;
 200:  GO[2:Fault Number]=R[99:Fault Code] ;
 201:  ENDIF ;
 202:  PAUSE ;
 203:  ABORT ;
 204:  !***************************** ;
 205:  LBL[9998:Abort] ;
 206:  WAIT   1.00(sec) ;
 207:  ABORT ;
 208:  !***************************** ;
 209:  LBL[9999:End] ;
 210:  !FINITO ;
 211:  !************************* ;
/POS
/END
