/PROG  TABLE_INDEX
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "ROTATE TABLE";
PROG_SIZE	= 2725;
CREATE		= DATE 21-07-16  TIME 12:06:50;
MODIFIED	= DATE 23-11-21  TIME 02:08:32;
FILE_NAME	= ;
VERSION		= 0;
LINE_COUNT	= 142;
MEMORY_SIZE	= 3237;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;
/MN
   1:  --eg:ROTATE THE INDEXING TABLE TO OPPOSITE POSITION ;
   2:   ;
   3:  LBL[1:START] ;
   4:  R[46:COLLISION SENSE]=100    ;
   5:  $WAITTMOUT=300 ;
   6:  IF DO[176:ALL TOOLS UNGRIPPED]=OFF,JMP LBL[10] ;
   7:  WAIT DO[42:TABLE READY FOR SERVICE]=ON TIMEOUT,LBL[9980] ;
   8:J PR[2:TABLE PERCH] 100% CNT50    ;
   9:  R[40:RECOVER START PR]=2    ;
  10:  UFRAME_NUM=1 ;
  11:  UTOOL_NUM=4 ;
  12:  IF DI[1:TABLE AT A POSITION]=ON AND DI[2:TABLE AT B POSITION]=OFF,JMP LBL[100] ;
  13:  IF DI[1:TABLE AT A POSITION]=OFF AND DI[2:TABLE AT B POSITION]=ON,JMP LBL[200] ;
  14:  JMP LBL[9981] ;
  15:   ;
  16:  LBL[10:FAULT] ;
  17:  CALL TABLE_MSG(21) ;
  18:  UALM[11] ;
  19:  JMP LBL[1] ;
  20:   ;
  21:  LBL[100:A SIDE TO B SIDE] ;
  22:  CALL FAULT_MESSAGE('Rotating from A side to B side.') ;
  23:  WAIT DI[5:LIGHT CURTAIN BLOCKED]=OFF    ;
  24:  PR[34,3:APP Z TOOL OFF]=50    ;
  25:  R[40:RECOVER START PR]=60    ;
  26:J PR[60:IN A PIN SIDE] 100% CNT10 Tool_Offset,PR[34:APP Z TOOL OFF]    ;
  27:  R[46:COLLISION SENSE]=125    ;
  28:L PR[60:IN A PIN SIDE] 800mm/sec FINE    ;
  29:  R[40:RECOVER START PR]=61    ;
  30:  LBL[105:UNLOCK TABLE] ;
  31:  DO[5:TURN TABLE UNLOCK SOL]=ON ;
  32:  WAIT DI[6:TABLE LOCKED IN POSITION]=OFF TIMEOUT,LBL[9982] ;
  33:  TIMER[2]=STOP ;
  34:  TIMER[2]=RESET ;
  35:  TIMER[2]=START ;
  36:  DO[45:TABLE ROTATING]=ON ;
  37:C PR[61:A_B MIDPOINT]    
    :  PR[62:IN PIN B SIDE] 600mm/sec FINE ACC1    ;
  38:  TIMER[2]=STOP ;
  39:  R[121:TABLE ROTATE TM]=TIMER[2]    ;
  40:  LBL[106:LOCK TABLE] ;
  41:  WAIT DO[35:TABLE IN POSITION]=ON TIMEOUT,LBL[9983] ;
  42:  WAIT    .25(sec) ;
  43:  DO[5:TURN TABLE UNLOCK SOL]=OFF ;
  44:  WAIT DI[6:TABLE LOCKED IN POSITION]=ON AND DO[42:TABLE READY FOR SERVICE]=ON TIMEOUT,LBL[9982] ;
  45:  DO[45:TABLE ROTATING]=OFF ;
  46:  R[40:RECOVER START PR]=62    ;
  47:L PR[62:IN PIN B SIDE] 2000mm/sec FINE Tool_Offset,PR[34:APP Z TOOL OFF]    ;
  48:  R[40:RECOVER START PR]=62    ;
  49:   ;
  50:  IF (DO[26:B SIDE LOAD COMPLETE]) THEN ;
  51:  DO[38:TABLE B READY]=ON ;
  52:  IF (!DO[63:NO LOAD ON]),DO[105:MEAS LOAD ACTIVE]=(ON) ;
  53:  IF (!DO[68:NO UNLOAD ON]),DO[106:MEAS UNLOAD ACTIVE]=(ON) ;
  54:  DO[26:B SIDE LOAD COMPLETE]=OFF ;
  55:  ELSE ;
  56:  CALL TABLE_MSG(16) ;
  57:  ENDIF ;
  58:   ;
  59:  R[46:COLLISION SENSE]=100    ;
  60:  R[902:TABLE ROTATIONS]=R[902:TABLE ROTATIONS]+1    ;
  61:  JMP LBL[9999] ;
  62:   ;
  63:  LBL[200:B SIDE TO A SIDE] ;
  64:  CALL FAULT_MESSAGE('Rotating from B side to A side.') ;
  65:  WAIT DI[5:LIGHT CURTAIN BLOCKED]=OFF    ;
  66:  PR[34,3:APP Z TOOL OFF]=50    ;
  67:J PR[62:IN PIN B SIDE] 100% CNT10 Tool_Offset,PR[34:APP Z TOOL OFF]    ;
  68:  R[40:RECOVER START PR]=62    ;
  69:  R[46:COLLISION SENSE]=125    ;
  70:L PR[62:IN PIN B SIDE] 800mm/sec FINE    ;
  71:  R[40:RECOVER START PR]=63    ;
  72:  LBL[205:UNLOCK TABLE] ;
  73:  WAIT    .25(sec) ;
  74:  DO[5:TURN TABLE UNLOCK SOL]=ON ;
  75:  WAIT DI[6:TABLE LOCKED IN POSITION]=OFF TIMEOUT,LBL[9984] ;
  76:  TIMER[2]=STOP ;
  77:  TIMER[2]=RESET ;
  78:  TIMER[2]=START ;
  79:  DO[45:TABLE ROTATING]=ON ;
  80:C PR[63:B_A MIDPOINT]    
    :  PR[60:IN A PIN SIDE] 600mm/sec FINE ACC1    ;
  81:  TIMER[2]=STOP ;
  82:  R[121:TABLE ROTATE TM]=TIMER[2]    ;
  83:  LBL[206:LOCK TABLE] ;
  84:  WAIT DO[35:TABLE IN POSITION]=ON TIMEOUT,LBL[9984] ;
  85:  WAIT    .25(sec) ;
  86:  DO[5:TURN TABLE UNLOCK SOL]=OFF ;
  87:  WAIT DI[6:TABLE LOCKED IN POSITION]=ON AND DO[42:TABLE READY FOR SERVICE]=ON TIMEOUT,LBL[9985] ;
  88:  DO[45:TABLE ROTATING]=OFF ;
  89:  R[40:RECOVER START PR]=60    ;
  90:L PR[60:IN A PIN SIDE] 2000mm/sec CNT10 Tool_Offset,PR[34:APP Z TOOL OFF]    ;
  91:  R[40:RECOVER START PR]=2    ;
  92:   ;
  93:  IF (DO[25:A SIDE LOAD COMPLETE]) THEN ;
  94:  IF (!DO[63:NO LOAD ON]),DO[105:MEAS LOAD ACTIVE]=(ON) ;
  95:  IF (!DO[68:NO UNLOAD ON]),DO[106:MEAS UNLOAD ACTIVE]=(ON) ;
  96:  DO[37:TABLE A READY]=ON ;
  97:  DO[25:A SIDE LOAD COMPLETE]=OFF ;
  98:  ELSE ;
  99:  CALL TABLE_MSG(16) ;
 100:  ENDIF ;
 101:   ;
 102:  R[46:COLLISION SENSE]=100    ;
 103:  R[902:TABLE ROTATIONS]=R[902:TABLE ROTATIONS]+1    ;
 104:  JMP LBL[9999] ;
 105:   ;
 106:  LBL[9980:FAULT] ;
 107:  CALL TABLE_MSG(2) ;
 108:  UALM[11] ;
 109:  JMP LBL[1] ;
 110:   ;
 111:  LBL[9981:FAULT] ;
 112:  CALL TABLE_MSG(8) ;
 113:  UALM[11] ;
 114:  JMP LBL[1] ;
 115:   ;
 116:  LBL[9982:FAULT] ;
 117:  CALL TABLE_MSG(6) ;
 118:  UALM[11] ;
 119:  JMP LBL[105] ;
 120:   ;
 121:  LBL[9983:FAULT] ;
 122:  CALL TABLE_MSG(7) ;
 123:  UALM[11] ;
 124:  JMP LBL[106] ;
 125:   ;
 126:  LBL[9984:FAULT] ;
 127:  CALL TABLE_MSG(6) ;
 128:  UALM[11] ;
 129:  JMP LBL[205] ;
 130:   ;
 131:  LBL[9985:FAULT] ;
 132:  CALL TABLE_MSG(7) ;
 133:  UALM[11] ;
 134:  JMP LBL[206] ;
 135:   ;
 136:  LBL[9999:END] ;
 137:  R[40:RECOVER START PR]=2    ;
 138:J PR[2:TABLE PERCH] 100% CNT50    ;
 139:  R[40:RECOVER START PR]=1    ;
 140:J PR[1:HOME POSITION] 100% FINE    ;
 141:  CALL MESSAGE19    ;
 142:  CALL MESSAGE20    ;
/POS
/END
