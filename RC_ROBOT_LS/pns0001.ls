/PROG  PNS0001
/ATTR
OWNER		= MNEDITOR;
COMMENT		= "MAIN";
PROG_SIZE	= 6873;
CREATE		= DATE 22-10-06  TIME 14:07:00;
MODIFIED	= DATE 23-11-21  TIME 06:00:10;
FILE_NAME	= PNS0001;
VERSION		= 0;
LINE_COUNT	= 243;
MEMORY_SIZE	= 7581;
PROTECT		= READ_WRITE;
TCD:  STACK_SIZE	= 0,
      TASK_PRIORITY	= 50,
      TIME_SLICE	= 0,
      BUSY_LAMP_OFF	= 0,
      ABORT_REQUEST	= 0,
      PAUSE_REQUEST	= 0;
DEFAULT_GROUP	= 1,*,*,*,*;
CONTROL_CODE	= 00000000 00000000;
/APPL
/APPL

AUTO_SINGULARITY_HEADER;
  ENABLE_SINGULARITY_AVOIDANCE   : TRUE;
/MN
   1:  !AUTOMATION WITHIN REACH          ;
   2:  !ROTARY CELL                      ;
   3:  !******************************** ;
   4:  LBL[1:INITIALIZE] ;
   5:  !SET CELL IO FOR PRODUCTION       ;
   6:  CALL SET_IO    ;
   7:  !GRIPPER SETUP FOR ID/OD GRIPPING ;
   8:  CALL SET_RO    ;
   9:  !CALL RECOVERY PROGRAM IF ROBOT   ;
  10:  !IS NOT AT HOME                   ;
  11:  IF (DO[145:AT HOME]=OFF) THEN ;
  12:  CALL PNS0002    ;
  13:  ENDIF ;
  14:  !CLEAR HMI MESSAGES ;
  15:  CALL MESSAGE19    ;
  16:  CALL MESSAGE20    ;
  17:  JMP LBL[10] ;
  18:  !******************************** ;
  19:  LBL[10:SYSTEM CHECK] ;
  20:  WAIT    .25(sec) ;
  21:  !CHECK BG LOGIC IS RUNNING        ;
  22:  IF ($MIX_BG[1].$STATUS<>2 OR $MIX_BG[2].$STATUS<>2 OR $MIX_BG[3].$STATUS<>2 OR $MIX_BG[4].$STATUS<>2 OR $MIX_BG[5].$STATUS<>2 OR $MIX_BG[6].$STATUS<>2) THEN ;
  23:  CALL BGLOGIC_MSG(1) ;
  24:  UALM[2] ;
  25:  JMP LBL[10] ;
  26:  ENDIF ;
  27:  !CHECK THE TABLE IS READY         ;
  28:  IF (DO[42:TABLE READY FOR SERVICE]=OFF) THEN ;
  29:  CALL TABLE_MSG(2) ;
  30:  UALM[11] ;
  31:  JMP LBL[10] ;
  32:  ENDIF ;
  33:  !CHECK PART SETUP ON HMI IS DONE  ;
  34:  IF (DO[212:MACH TYPE NOT SELECTED]=ON) THEN ;
  35:  CALL MACH_MSG(3) ;
  36:  UALM[13] ;
  37:  JMP LBL[10] ;
  38:  ENDIF ;
  39:  IF (DO[63:NO LOAD ON]=ON AND DO[68:NO UNLOAD ON]=ON) THEN ;
  40:  CALL MACH_MSG(5) ;
  41:  UALM[13] ;
  42:  JMP LBL[10] ;
  43:  ENDIF ;
  44:  IF (DO[71:SINGLE PART HANDLING ON]=OFF AND DO[72:DUAL PART HANDLING ON]=OFF) THEN ;
  45:  CALL TOOL_MSG(22) ;
  46:  UALM[1] ;
  47:  JMP LBL[10] ;
  48:  ENDIF ;
  49:  IF (DO[61:LOAD MAINSPINDLE ON]=OFF AND DO[62:LOAD SUBSPINDLE ON]=OFF AND DO[63:NO LOAD ON]=OFF) THEN ;
  50:  CALL MACH_MSG(6) ;
  51:  UALM[13] ;
  52:  JMP LBL[10] ;
  53:  ENDIF ;
  54:  IF (DO[66:UNLOAD MAINSPINDLE ON]=OFF AND DO[67:UNLOAD SUBSPINDLE ON]=OFF AND DO[68:NO UNLOAD ON]=OFF) THEN ;
  55:  CALL MACH_MSG(7) ;
  56:  UALM[13] ;
  57:  JMP LBL[10] ;
  58:  ENDIF ;
  59:  IF (DO[116:T1 OD GRIP]=OFF AND DO[117:T1 ID GRIP]=OFF) THEN ;
  60:  CALL TOOL_MSG(1) ;
  61:  UALM[1] ;
  62:  JMP LBL[10] ;
  63:  ENDIF ;
  64:  IF (DO[118:T2 OD GRIP]=OFF AND DO[119:T2 ID GRIP]=OFF) THEN ;
  65:  CALL TOOL_MSG(8) ;
  66:  UALM[1] ;
  67:  JMP LBL[10] ;
  68:  ENDIF ;
  69:  IF (DO[109:PART HMI SETUP COMPLETE]=OFF) THEN ;
  70:  IF (DO[145:AT HOME]=OFF) THEN ;
  71:  CALL PNS0002    ;
  72:  ENDIF ;
  73:  CALL HMI_MSG    ;
  74:  UALM[14] ;
  75:  JMP LBL[10] ;
  76:  ENDIF ;
  77:  !******************************** ;
  78:  LBL[100:PROGRAM LOOP] ;
  79:  !SET REFERENCE POSITIONS ;
  80:  CALL SET_REFERENCES    ;
  81:  !CHECK CYCLE STOP CONDITION       ;
  82:  IF (DO[31:CYCLE STOP ACTIVE]=ON AND DO[137:T2 FINISHED PART]=OFF AND DO[211:MACHINE EMPTY]=ON) THEN ;
  83:  WAIT    .50(sec) ;
  84:  IF (DO[145:AT HOME]=OFF) THEN ;
  85:  CALL PNS0002    ;
  86:  ENDIF ;
  87:  DO[31:CYCLE STOP ACTIVE]=OFF ;
  88:  PAUSE ;
  89:  JMP LBL[100] ;
  90:  ENDIF ;
  91:  !CHECK BG LOGIC IS RUNNING        ;
  92:  IF ($MIX_BG[1].$STATUS<>2 OR $MIX_BG[2].$STATUS<>2 OR $MIX_BG[3].$STATUS<>2 OR $MIX_BG[4].$STATUS<>2 OR $MIX_BG[5].$STATUS<>2) THEN ;
  93:  CALL BGLOGIC_MSG(1) ;
  94:  UALM[2] ;
  95:  JMP LBL[100] ;
  96:  ENDIF ;
  97:  !CHECK GRIPPER SENSORS            ;
  98:  IF ((RO[1:T1 OPEN]=OFF AND RO[2:T1 CLOSE]=OFF) OR (RO[3:T2 OPEN]=OFF AND RO[4:T2 CLOSE]=OFF)),CALL SET_RO ;
  99:  IF (DO[170:T1 OVERTRAVEL]=ON AND DO[172:T2 OVERTRAVEL]=ON) THEN ;
 100:  CALL TOOL_MSG(15) ;
 101:  UALM[1] ;
 102:  JMP LBL[100] ;
 103:  ENDIF ;
 104:  IF (DO[170:T1 OVERTRAVEL]=ON AND DO[172:T2 OVERTRAVEL]=OFF) THEN ;
 105:  CALL TOOL_MSG(16) ;
 106:  UALM[1] ;
 107:  JMP LBL[100] ;
 108:  ENDIF ;
 109:  IF (DO[170:T1 OVERTRAVEL]=OFF AND DO[172:T2 OVERTRAVEL]=ON) THEN ;
 110:  CALL TOOL_MSG(17) ;
 111:  UALM[1] ;
 112:  JMP LBL[100] ;
 113:  ENDIF ;
 114:  IF (DO[174:PART IN T1]=ON AND GO[10:PART TRACK TOOL 1]=0) THEN ;
 115:  CALL TOOL_MSG(18) ;
 116:  UALM[1] ;
 117:  JMP LBL[100] ;
 118:  ENDIF ;
 119:  IF (DO[175:PART IN T2]=ON AND GO[11:PART TRACK TOOL 2]=0) THEN ;
 120:  CALL TOOL_MSG(19) ;
 121:  UALM[1] ;
 122:  JMP LBL[100] ;
 123:  ENDIF ;
 124:  !CHECK HMI SETTINGS COMPLETE      ;
 125:  IF (DO[109:PART HMI SETUP COMPLETE]=OFF),JMP LBL[10] ;
 126:  !CHECK FOR NEW PART SETUP         ;
 127:  IF (DO[104:NEW PART ACTIVE]=ON AND DO[109:PART HMI SETUP COMPLETE]=ON AND DO[50:PALLET SETUP COMPLETE]=OFF OR DO[104:NEW PART ACTIVE]=ON AND DO[109:PART HMI SETUP COMPLETE]=ON AND DO[50:PALLET SETUP COMPLETE]=
    :  ON AND DO[107:MEAS LOAD COMP]=OFF AND DO[108:MEAS UNLD COMP]=OFF) THEN ;
 128:  CALL SETUP_NEW_PART    ;
 129:  ENDIF ;
 130:  !CHECK PALLET SETUP AFTER PALLET  ;
 131:  !ROTATE. NOT FOR NEW PART SETUP   ;
 132:  IF (DO[104:NEW PART ACTIVE]=OFF AND DO[50:PALLET SETUP COMPLETE]=OFF) THEN ;
 133:  CALL SETUP_PALLET    ;
 134:  ENDIF ;
 135:  !PICK PART FROM ROTARY TABLE      ;
 136:  !DUAL PART HANDLING IS ON         ;
 137:  IF (DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[43:TABLE PICK COMPLETE]=OFF AND DO[42:TABLE READY FOR SERVICE]=ON AND DO[49:PART AT REGRIP]=OFF AND DO[50:PALLET SETUP COMPLETE]=ON AND DO[31:CYCLE STOP ACTIVE]=OFF AND 
    :  DO[32:PURGE ACTIVE]=OFF AND DO[63:NO LOAD ON]=OFF AND DO[109:PART HMI SETUP COMPLETE]=ON AND DO[104:NEW PART ACTIVE]=OFF AND DO[72:DUAL PART HANDLING ON]=ON) THEN ;
 138:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 139:  CALL TABLE_PICK    ;
 140:  ENDIF ;
 141:  !SINGLE PART HANDLING             ;
 142:  !MACHINE SHOULD BE EMPTY          ;
 143:  IF (DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[43:TABLE PICK COMPLETE]=OFF AND DO[42:TABLE READY FOR SERVICE]=ON AND DO[49:PART AT REGRIP]=OFF AND DO[50:PALLET SETUP COMPLETE]=ON AND DO[31:CYCLE STOP ACTIVE]=OFF AND 
    :  DO[32:PURGE ACTIVE]=OFF AND DO[63:NO LOAD ON]=OFF AND DO[109:PART HMI SETUP COMPLETE]=ON AND DO[104:NEW PART ACTIVE]=OFF AND DO[71:SINGLE PART HANDLING ON]=ON AND DO[211:MACHINE EMPTY]=ON) THEN ;
 144:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 145:  CALL TABLE_PICK    ;
 146:  ENDIF ;
 147:  !REGRIP PART IN TOOL 1            ;
 148:  IF (DO[130:T1 REGRIP]=ON AND DO[175:PART IN T2]=OFF) THEN ;
 149:  DO[202:RECOVER ACTIVE]=OFF ;
 150:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 151:  CALL PART_REGRIP    ;
 152:  ENDIF ;
 153:  !PICK PART FROM REGRIP            ;
 154:  IF ((DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[49:PART AT REGRIP]=ON AND DO[34:REGRIP CHECKED]=ON) AND (DO[37:TABLE A READY]=ON OR DO[38:TABLE B READY]=ON)) THEN ;
 155:  DO[202:RECOVER ACTIVE]=OFF ;
 156:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 157:  CALL PART_REGRIP    ;
 158:  ENDIF ;
 159:  !SERVICE MACHINE                  ;
 160:  !IF PART IN GRIP FOR MACHINE      ;
 161:  !OR ONLY UNLOADING MACHINE        ;
 162:  IF (DO[129:T1 MACHINE]=ON OR DO[63:NO LOAD ON]=ON AND DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[44:TABLE DROP COMPLETE]=OFF) THEN ;
 163:  --eg:STANDARD SERVICE ;
 164:  IF (R[403:SERVICE TYPE]=1) THEN ;
 165:  CALL LATHE_SERVICE    ;
 166:  ENDIF ;
 167:  --eg:DUAL PART CUTTING. ONLY FOR MACHINE WITH SUB ;
 168:  IF (R[403:SERVICE TYPE]=2) THEN ;
 169:  CALL LATHE_SERVICE_DUAL    ;
 170:  ENDIF ;
 171:  --eg:OP10 OP20 CUT FOR MACHINE WITHOUT SUB. ADDITIONAL REGRIP REQUIRED ;
 172:  IF (R[403:SERVICE TYPE]=3) THEN ;
 173:  CALL LATHE_SERVICE_10_20    ;
 174:  ENDIF ;
 175:  ENDIF ;
 176:  !SERVICE MACHINE                  ;
 177:  !FOR UNLOAD IF SINGLE PART        ;
 178:  !HANDLING IS ACTIVE. FOR MAIN OR  ;
 179:  !SUB SPINDLE                      ;
 180:  IF (DO[71:SINGLE PART HANDLING ON]=ON AND DO[211:MACHINE EMPTY]=OFF AND DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[44:TABLE DROP COMPLETE]=OFF) THEN ;
 181:  CALL LATHE_SERVICE    ;
 182:  ENDIF ;
 183:  !SERVICE MACHINE                  ;
 184:  !IF PURGE ACTIVE                  ;
 185:  IF (DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[211:MACHINE EMPTY]=OFF AND DO[32:PURGE ACTIVE]=ON AND DO[44:TABLE DROP COMPLETE]=OFF) THEN ;
 186:  --eg:STANDARD SERVICE ;
 187:  IF (R[403:SERVICE TYPE]=1) THEN ;
 188:  CALL LATHE_SERVICE    ;
 189:  ENDIF ;
 190:  --eg:DUAL PART CUTTING. ONLY FOR MACHINE WITH SUB ;
 191:  IF (R[403:SERVICE TYPE]=2) THEN ;
 192:  CALL LATHE_SERVICE_DUAL    ;
 193:  ENDIF ;
 194:  --eg:OP10 OP20 CUT FOR MACHINE WITHOUT SUB. ADDITIONAL REGRIP REQUIRED ;
 195:  IF (R[403:SERVICE TYPE]=3) THEN ;
 196:  CALL LATHE_SERVICE_10_20    ;
 197:  ENDIF ;
 198:  ENDIF ;
 199:  !PLACE PART ON ROTARY TABLE       ;
 200:  IF (DO[137:T2 FINISHED PART]=ON AND DO[171:T1 UNGRIPPED]=ON AND DO[42:TABLE READY FOR SERVICE]=ON OR DO[131:T1 DEMO PART]=ON AND DO[173:T2 UNGRIPPED]=ON AND DO[42:TABLE READY FOR SERVICE]=ON) THEN ;
 201:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 202:  CALL TABLE_DROP    ;
 203:  ENDIF ;
 204:  !ROTATE ROTARY TABLE              ;
 205:  IF (DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[32:PURGE ACTIVE]=OFF AND DO[37:TABLE A READY]=OFF AND DO[38:TABLE B READY]=OFF AND DO[41:TABLE READY TO ROTATE]=ON) THEN ;
 206:  DO[101:WAIT FOR ROTATE MSG]=OFF ;
 207:  CALL TABLE_INDEX    ;
 208:  ENDIF ;
 209:  !PLACE PART IN BIN 1              ;
 210:  IF (DO[131:T1 DEMO PART]=ON AND DO[173:T2 UNGRIPPED]=ON) THEN ;
 211:  CALL BIN_1_DROP    ;
 212:  ENDIF ;
 213:  !PLACE PART IN BIN 2              ;
 214:  IF (DO[138:T2 REGRIP RECOV]=ON AND DO[171:T1 UNGRIPPED]=ON) THEN ;
 215:  CALL BIN_2_DROP    ;
 216:  ENDIF ;
 217:  !CHECK PURGE COMPLETE             ;
 218:  IF ((DO[32:PURGE ACTIVE]=ON AND DO[176:ALL TOOLS UNGRIPPED]=ON AND DO[211:MACHINE EMPTY]=ON) OR (DO[63:NO LOAD ON]=ON AND DO[44:TABLE DROP COMPLETE]=ON) OR (DO[68:NO UNLOAD ON]=ON AND 
    :  DO[43:TABLE PICK COMPLETE]=ON)) THEN ;
 219:  WAIT    .50(sec) ;
 220:  IF (DO[145:AT HOME]=OFF) THEN ;
 221:  CALL PNS0002    ;
 222:  ENDIF ;
 223:  DO[32:PURGE ACTIVE]=OFF ;
 224:  DO[37:TABLE A READY]=OFF ;
 225:  DO[38:TABLE B READY]=OFF ;
 226:  JMP LBL[100] ;
 227:  ENDIF ;
 228:  !IF NOTHING TO DO GO HOME         ;
 229:  IF (DO[145:AT HOME]=OFF AND DO[160:ROBOT PERCHED]=ON) THEN ;
 230:  CALL MOVE_HOME    ;
 231:  ENDIF ;
 232:  !CALL TABLE MESSAGE FOR ROTATE    ;
 233:  IF (DO[37:TABLE A READY]=OFF AND DO[38:TABLE B READY]=OFF AND DO[41:TABLE READY TO ROTATE]=OFF AND DO[101:WAIT FOR ROTATE MSG]=OFF) THEN ;
 234:  CALL TABLE_MSG(14) ;
 235:  DO[101:WAIT FOR ROTATE MSG]=ON ;
 236:  IF (DO[122:OVERNIGHT SAME]=ON),DO[41:TABLE READY TO ROTATE]=(ON) ;
 237:  IF (DO[122:OVERNIGHT SAME]=ON AND DI[1:TABLE AT A POSITION]=ON),DO[26:B SIDE LOAD COMPLETE]=(ON) ;
 238:  IF (DO[122:OVERNIGHT SAME]=ON AND DI[2:TABLE AT B POSITION]=ON),DO[25:A SIDE LOAD COMPLETE]=(ON) ;
 239:  ENDIF ;
 240:  WAIT    .10(sec) ;
 241:  JMP LBL[100] ;
 242:  !******************************** ;
 243:  LBL[9999:END] ;
/POS
/END
